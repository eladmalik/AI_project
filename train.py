from agents.ppo_lstm import ppo_lstm_train
from utils.lot_generator import *
from utils.feature_extractor import *
from utils.reward_analyzer import *
from agents.ppo import ppo_train
from agents.genetic import genetic_train
from agents.dqn import dqn_train

if __name__ == '__main__':
    ppo_lstm_train.main(lot_generator=example2,
                        reward_analyzer=AnalyzerAccumulating4FrontBack2,
                        feature_extractor=Extractor8,
                        time_difference_secs=0.1,
                        max_iteration_time=800,
                        draw_screen=False,
                        draw_rate=1,
                        learning_rate=0.0005,
                        gamma=0.98,
                        lmbda=0.95,
                        policy_clip=0.1,
                        n_epochs=2,
                        learn_interval=20)
    # ppo_train.main(lot_generator=generate_lot,
    #                reward_analyzer=AnalyzerAccumulating4FrontBack,
    #                feature_extractor=Extractor8,
    #                load_model=False,
    #                load_folder=None,
    #                time_difference_secs=0.1,
    #                max_iteration_time=500,
    #                draw_screen=True,
    #                resize_screen=False,
    #                draw_rate=1,
    #                n_simulations=10000,
    #                learning_rate=0.0005,
    #                gamma=0.99,
    #                lmbda=0.95,
    #                policy_clip=0.1,
    #                learn_interval=80,
    #                batch_size=20,
    #                n_epochs=4,
    #                plot_interval=100)
    # genetic_train.main(lot_generator=example2,
    #                    reward_analyzer=AnalyzerAccumulating4FrontBack2,
    #                    feature_extractor=Extractor8,
    #                    load_model=False,
    #                    load_folder=None,
    #                    time_difference_secs=0.1,
    #                    max_iteration_time=800,
    #                    draw_screen=True,
    #                    resize_screen=False,
    #                    num_generations=100,
    #                    num_parents_mating=5,
    #                    genes_mutation_percent=10,
    #                    num_parents_to_keep=-1)
    # dqn_train.main(lot_generator=generate_lot,
    #                reward_analyzer=AnalyzerAccumulating4FrontBack,
    #                feature_extractor=Extractor8,
    #                load_model=False,
    #                load_folder=None,
    #                time_difference_secs=0.1,
    #                max_iteration_time=800,
    #                draw_screen=True,
    #                resize_screen=False,
    #                draw_rate=1,
    #                n_simulations=100000,
    #                batch_size=1000,
    #                max_memory=100000,
    #                randomness_rate=0.25,
    #                learning_rate=0.0005,
    #                gamma=0.98,
    #                plot_interval=100,
    #                checkpoint_interval=250)
